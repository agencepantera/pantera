---
const navItems = [
  { 
    href: "/#services", 
    label: "Services",
  },
  { 
    href: "/expertises",
    label: "Expertises",
    subitems: [
      { href: "/expertises/site-vitrine", label: "Site Vitrine" },
      { href: "/expertises/site-ecommerce", label: "Site E-commerce" },
      { href: "/expertises/audit-seo", label: "Audit SEO" },
      { href: "/expertises/referencement-naturel", label: "Référencement Naturel" },
      { href: "/expertises/referencement-payant", label: "Référencement Payant" },
      { href: "/expertises/social-ads", label: "Social ADS" },
      { href: "/expertises/audit-site", label: "Audit de Site" },
      { href: "/expertises/creation-refonte-site", label: "Création / Refonte de Site" }
    ]
  },
  { href: "/#projects", label: "Projets" },
  { href: "/#about", label: "À propos" },
  { href: "/#contact", label: "Contact" }
];
---

<header class="fixed w-full z-50 bg-white/90 backdrop-blur-sm dark:bg-gray-900/90 transition-colors duration-300">
  <nav class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-28"> <!-- Hauteur augmentée -->
      <div class="flex-shrink-0 flex items-center">
        <a href="/" class="flex items-center">
          <link rel="preload" href="/images/logo-pantera-agency_1_75.webp" as="image">
          <img 
          src="/images/logo-pantera-agency_1_75.webp" 
          alt="Pantera Agency"
          width="300" 
          height="130" 
          fetchpriority="high" 
          loading="eager"
          style="background-color: #f0f0f0;"
          class="lg:w-[350px] transition-transform transform hover:scale-110"
        />
        </a>
      </div>
      
      <div class="hidden sm:ml-6 sm:flex sm:items-center">
        <div class="flex space-x-4">
          {navItems.map(({ href, label, subitems }) => (
            <div class="relative group">
              <a
                href={href}
                class={`px-3 py-2 rounded-md text-sm font-medium text-gray-700 hover:text-primary-600 dark:text-gray-300 dark:hover:text-primary-500 transition-colors duration-300 flex items-center ${subitems ? 'group' : ''}`}
              >
                {label}
                {subitems && (
                  <svg 
                    class="ml-1 h-4 w-4 text-gray-400 group-hover:text-primary-500 transition-colors duration-300" 
                    fill="none" 
                    viewBox="0 0 24 24" 
                    stroke="currentColor"
                  >
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                  </svg>
                )}
              </a>
              {subitems && (
                <div class="absolute left-0 mt-2 w-64 rounded-md shadow-lg bg-white dark:bg-gray-800 ring-1 ring-black ring-opacity-5 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-50">
                  <div class="py-1" role="menu">
                    {subitems.map((subitem) => (
                      <a
                        href={subitem.href}
                        class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-primary-600 dark:text-gray-300 dark:hover:bg-gray-700 dark:hover:text-primary-500"
                        role="menuitem"
                      >
                        {subitem.label}
                      </a>
                    ))}
                  </div>
                </div>
              )}
            </div>
          ))}
        </div>
      </div>

      <div class="flex items-center sm:hidden">
        <button
          type="button"
          class="mobile-menu-button inline-flex items-center justify-center p-2 rounded-md text-gray-700 hover:text-primary-600 dark:text-gray-300 dark:hover:text-primary-500"
          aria-controls="mobile-menu"
          aria-expanded="false"
        >
          <span class="sr-only">Ouvrir le menu</span>
          <svg
            class="block h-6 w-6"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
            aria-hidden="true"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"
            />
          </svg>
        </button>
      </div>
    </div>
  </nav>

  <!-- Mobile menu -->
  <div class="sm:hidden hidden" id="mobile-menu">
    <div class="px-2 pt-2 pb-3 space-y-1">
      {navItems.map(({ href, label, subitems }) => (
        <div>
          <a
            href={href}
            class="block px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-primary-600 dark:text-gray-300 dark:hover:text-primary-500 flex items-center justify-between"
          >
            {label}
            {subitems && (
              <svg 
                class="h-4 w-4 text-gray-400" 
                fill="none" 
                viewBox="0 0 24 24" 
                stroke="currentColor"
              >
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
              </svg>
            )}
          </a>
          {subitems && (
            <div class="pl-4 mt-2 space-y-1">
              {subitems.map((subitem) => (
                <a
                  href={subitem.href}
                  class="block px-3 py-2 text-sm text-gray-600 hover:text-primary-600 dark:text-gray-400 dark:hover:text-primary-500"
                >
                  {subitem.label}
                </a>
              ))}
            </div>
          )}
        </div>
      ))}
    </div>
  </div>
</header>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const mobileMenuButton = document.querySelector('.mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');

    if (mobileMenuButton && mobileMenu) {
      mobileMenuButton.addEventListener('click', () => {
        mobileMenu.classList.toggle('hidden');
      });
    }
  });
</script>